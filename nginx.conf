events {
    worker_connections 1024;
}

http {
    # DNS resolver for dynamic upstream resolution
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Rate limiting zone
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format with more details
    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'request_time=$request_time';

    # Logging
    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log info;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Define upstream blocks for automatic failover
    upstream backend_primary {
        server etf-scanner-backend.onrender.com:443 max_fails=1 fail_timeout=5s;
        server etf-screener-backend-production.up.railway.app:443 backup;
    }

    upstream backend_secondary {
        server etf-screener-backend-production.up.railway.app:443 max_fails=1 fail_timeout=5s;
        server etf-scanner-backend.onrender.com:443 backup;
    }

    # Load balancing using request time microseconds
    map $msec $backend_upstream {
        ~[02468]$ backend_primary;
        ~[13579]$ backend_secondary;
    }

    server {
        listen 80;
        server_name _;

        # Apply rate limiting
        limit_req zone=api_limit burst=20 nodelay;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Test endpoints for individual backends
        location /test/backend1 {
            proxy_pass https://etf-scanner-backend.onrender.com/api/prices;
            proxy_http_version 1.1;
            proxy_set_header Host etf-scanner-backend.onrender.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_ssl_name etf-scanner-backend.onrender.com;
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            add_header X-Backend-Used "backend1-direct" always;
        }

        location /test/backend2 {
            proxy_pass https://etf-screener-backend-production.up.railway.app/api/prices;
            proxy_http_version 1.1;
            proxy_set_header Host etf-screener-backend-production.up.railway.app;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_ssl_name etf-screener-backend-production.up.railway.app;
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            add_header X-Backend-Used "backend2-direct" always;
        }

        # Fallback endpoint that returns static data if all backends fail
        location /fallback {
            root /usr/share/nginx/html;
            try_files /fallback.json =503;
            add_header Content-Type application/json;
            add_header X-Fallback "true" always;
        }

        # Location for backend_primary upstream
        location @backend_primary {
            proxy_pass https://backend_primary;
            proxy_http_version 1.1;
            proxy_set_header Host $proxy_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 10s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_next_upstream error timeout http_404 http_502 http_503 http_504;
            add_header X-Backend-Used "primary-upstream" always;
        }

        # Location for backend_secondary upstream  
        location @backend_secondary {
            proxy_pass https://backend_secondary;
            proxy_http_version 1.1;
            proxy_set_header Host $proxy_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 10s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_next_upstream error timeout http_404 http_502 http_503 http_504;
            add_header X-Backend-Used "secondary-upstream" always;
        }

        # Main load balancer location with simple routing
        location / {
            # Route based on load balancing
            if ($backend_upstream = "backend_primary") {
                rewrite ^ /primary last;
            }
            
            if ($backend_upstream = "backend_secondary") {
                rewrite ^ /secondary last;
            }
            
            # Default to primary
            rewrite ^ /primary last;
        }

        # Route to primary upstream (backend1 with backend2 as backup)
        location /primary {
            internal;
            rewrite ^/primary(.*)$ $1 break;
            proxy_pass https://etf-scanner-backend.onrender.com;
            proxy_http_version 1.1;
            proxy_set_header Host etf-scanner-backend.onrender.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_ssl_name etf-scanner-backend.onrender.com;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 10s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_intercept_errors on;
            add_header X-Backend-Used "backend1" always;
            
            # On 404 or other errors, try backend2
            error_page 404 502 503 504 = @try_backend2;
        }

        # Route to secondary upstream (backend2 with backend1 as backup)
        location /secondary {
            internal;
            rewrite ^/secondary(.*)$ $1 break;
            proxy_pass https://etf-screener-backend-production.up.railway.app;
            proxy_http_version 1.1;
            proxy_set_header Host etf-screener-backend-production.up.railway.app;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_ssl_name etf-screener-backend-production.up.railway.app;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 10s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_intercept_errors on;
            add_header X-Backend-Used "backend2" always;
            
            # On 404 or other errors, try backend1
            error_page 404 502 503 504 = @try_backend1;
        }

        # Failover to backend2
        location @try_backend2 {
            proxy_pass https://etf-screener-backend-production.up.railway.app;
            proxy_http_version 1.1;
            proxy_set_header Host etf-screener-backend-production.up.railway.app;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_ssl_name etf-screener-backend-production.up.railway.app;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 10s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            add_header X-Backend-Used "backend2-failover" always;
        }

        # Failover to backend1
        location @try_backend1 {
            proxy_pass https://etf-scanner-backend.onrender.com;
            proxy_http_version 1.1;
            proxy_set_header Host etf-scanner-backend.onrender.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_ssl_name etf-scanner-backend.onrender.com;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 10s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            add_header X-Backend-Used "backend1-failover" always;
        }

        # Custom error pages with fallback for final errors
        error_page 500 502 503 504 /fallback;
    }
}